name: Docker

on:
  release:
    types:
      - published
  push:
    branches:
      - main

env:
  NIX_VERSION: nix-2.13.2
  NIXPKGS_CHANNEL: nixos-22.11
  CACHIX_NAME: golden-gate-ggx
  OCTOLYTICS_DIMENSION_REPOSITORY_ID: 590614152
  GIT_LFS_SKIP_SMUDGE: 1

jobs:
  build-sydney:
    if: github.event_name == 'release'
    runs-on: buildjet-32vcpu-ubuntu-2204
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.6.1
        with:
          context: .
          file: ./Dockerfile.sydney
          push: true
          tags: |
            ggxdocker/ggxnode-sydney-img:latest
            ggxdocker/ggxnode-sydney-img:${{ github.event.release.tag_name }}
            ggxdocker/ggxnode-sydney-img:${{ steps.vars.outputs.sha_short }}

  build-brooklyn:
    runs-on: buildjet-32vcpu-ubuntu-2204
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and push Docker image
        id: build_and_push
        uses: docker/build-push-action@v6.6.1
        with:
          context: .
          file: ./Dockerfile.brooklyn
          push: true
          tags: |
            ggxdocker/ggxnode-brooklyn-img:latest
            ggxdocker/ggxnode-brooklyn-img:${{ steps.vars.outputs.sha_short }}

  tag-brooklyn-release:
    if: github.event_name == 'release'
    runs-on: buildjet-32vcpu-ubuntu-2204
    needs: build-brooklyn
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and push release
        run: |
          docker pull ggxdocker/ggxnode-brooklyn-img:latest
          docker tag ggxdocker/ggxnode-brooklyn-img:latest ggxdocker/ggxnode-brooklyn-img:${{ github.event.release.tag_name }}
          docker push ggxdocker/ggxnode-brooklyn-img:${{ github.event.release.tag_name }}
